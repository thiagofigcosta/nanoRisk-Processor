11000111 00010001 //load address (id+register - address)
11001000 00010101 //load address (id+register - address)
11100111 00000111 //load word (id+register - reg_addr+offset)
11101000 00001000 //load word (id+register - reg_addr+offset)
11010010 10001010  //load constant (id+register - value)
10110010 00000000  //jump register (id+register - address(if register==0))
00110100 00100000  //add (id+out - in0+in1)
00111011 01010000  //add (id+out - in0+in1)
00111100 01100000  //add (id+out - in0+in1)
11000111 00010010  //load address (id+register - address)
11001000 00010110  //load address (id+register - address)
11100111 00000111  //load word (id+register - reg_addr+offset)
11101000 00001000  //load word (id+register - reg_addr+offset)
11010010 10001010  //load constant (id+register - value)
10110010 00000000  //jump register (id+register - address(if register==0))
00110100 00100000  //add (id+out - in0+in1)
00111011 01011011  //add (id+out - in0+in1)
00111100 01101100  //add (id+out - in0+in1)
11000111 00010011  //load address (id+register - address)
11001000 00010111  //load address (id+register - address)
11100111 00000111  //load word (id+register - reg_addr+offset)
11101000 00001000  //load word (id+register - reg_addr+offset)
11010010 10001010  //load constant (id+register - value)
10110010 00000000  //jump register (id+register - address(if register==0))
00110100 00100000  //add (id+out - in0+in1)
00111011 01011011  //add (id+out - in0+in1)
00111100 01101100  //add (id+out - in0+in1)
11000111 00010100  //load address (id+register - address)
11001000 00011000  //load address (id+register - address)
11100111 00000111  //load word (id+register - reg_addr+offset)
11101000 00001000  //load word (id+register - reg_addr+offset)
11010010 10001010  //load constant (id+register - value)
10110010 00000000  //jump register (id+register - address(if register==0))
00110100 00100000  //add (id+out - in0+in1)
00111100 01101100  //add (id+out - in0+in1)
00111011 01011011  //add (id+out - in0+in1)
11011101 00000000  //load constant (id+register - value)
11001110 00000000  //load address (id+register - address)
11010010 00001000  //load constant (id+register - value)
10000010 11010010  //set less on then (id+out - in0+in1)
11010010 10000100  //load constant (id+register - value)
00010010 00000010  //branch register if equal(id+out - in0+in1)
11010010 00000001  //load constant (id+register - value)
01000011 00110010  //sub (id+out - in0+in1)
11111101 00000011  //store word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
01000011 00110010  //sub (id+out - in0+in1)
11111110 00000011  //store word (id+register - reg_addr+offset)
11101101 00001110  //load word (id+register - reg_addr+offset)
11101110 00011110  //load word (id+register - reg_addr+offset)
01001101 11001101  //sub (id+out - in0+in1)
01001110 10111110  //sub (id+out - in0+in1)
00110010 11011110  //add (id+out - in0+in1)
11101110 00000011  //load word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
00110011 00110010  //add (id+out - in0+in1)
11101101 00000011  //load word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
00110011 00110010  //add (id+out - in0+in1)
11010010 10000100  //load constant (id+register - value)
00010000 00100010  //branch register if equal(id+out - in0+in1)
11010010 00000001  //load constant (id+register - value)
00111101 11010010  //add (id+out - in0+in1)
11010010 00000010  //load constant (id+register - value)
00111110 11100010  //add (id+out - in0+in1)
10110000 01001100  //jump register (id+register - address(if register==0))
11010010 00000001  //load constant (id+register - value)
00111101 11010010  //add (id+out - in0+in1)
00000001 00000000  //sleep(id+register - null)
11010010 00000001  //load constant (id+register - value)
01000011 00110010  //sub (id+out - in0+in1)
11111011 00000011  //store word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
01000011 00110010  //sub (id+out - in0+in1)
11111100 00000011  //store word (id+register - reg_addr+offset)
10001011 01111000  //set less on then (id+out - in0+in1)
11010010 10100010  //load constant (id+register - value)
00011011 00000010  //branch register if equal(id+out - in0+in1)
00111011 01110000  //add (id+out - in0+in1)
00111100 10000000  //add (id+out - in0+in1)
10110000 10100110  //jump register (id+register - address(if register==0))
00111011 10000000  //add (id+out - in0+in1)
00111100 01110000  //add (id+out - in0+in1)
11010101 00000000  //load constant (id+register - value)
11010110 00000000  //load constant (id+register - value)
11010010 00000000  //load constant (id+register - value)
10000010 10110010  //set less on then (id+out - in0+in1)
01110010 00100000  //nor (id+out - in0+in1)
11010010 11000010  //load constant (id+register - value)
00010010 00000010  //branch register if equal(id+out - in0+in1)
00110101 01011100  //add (id+out - in0+in1)
11010111 00000010  //load constant (id+register - value)
11010010 00000001  //load constant (id+register - value)
00111011 10110010  //add (id+out - in0+in1)
11010010 11010000  //load constant (id+register - value)
00100001 01110010  //branch register if flag (id+out - in0+in1)
10110000 10101010  //jump register (id+register - address(if register==0))
11101100 00000011  //load word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
00110011 00110010  //add (id+out - in0+in1)
11101011 00000011  //load word (id+register - reg_addr+offset)
11010010 00000001  //load constant (id+register - value)
00110011 00110010  //add (id+out - in0+in1)
10110100 00000000  //jump register (id+register - address(if register==0))
11010010 00000001  //load constant (id+register - value)
00110110 01100010  //add (id+out - in0+in1)
10110000 10101010  //jump register (id+register - address(if register==0))
